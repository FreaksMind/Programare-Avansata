Problem:
    Create the complete model: Person, Programmer, Designer, Company. All persons have a birth date. Each class must have at least one specific property, that others don't have (be creative).
    Each person will contain a Map defining the relathionships to other persons or companies.
    Create the Network class containing a List of identifiable nodes.
    Create a method that computes the importance of a node in the network, as the number of its connections to other nodes.
    Create a network object containing persons, companies and relationships and print it on the screen. When printing the network, the nodes must be ordered according to their importance. 
    
    Solution:
    
    Am creat clasele Person, Company, Network si Node. Clasele Programmer si Designer extind clasa Person. In clasa Person tin o lista de relatii sub forma unui map ce are ca cheie un Nod si ca valoare relatia dintre cele doua obiecte.
    In clasa network exista o metoda computeImportance care, in functie de tipul Nodului calculeaza numarul de legaturi si il returneaza. Tot in clasa Network am suprascris metoda toString care cand este apelata va returna legaturile din Network-ul respectiv
